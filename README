Burndown charts, better predictions, "what if" scenarios for pivotal tracker using a nifty new service, by James Shore and Diana Larsen: http://www.teamrabu.com/

The current Rabu tool takes a simple json format describing iterations, velocity, remaining, history and provides great looking html burndown.
I've been using it manually with my pivotal project.


== Installing
* gem install json
* gem install hpricot
* git clone git@github.com:kaeverett/pivotaltracker2rabu.git
* download rabu.zip from http://www.teamrabu.com/welcome.html
* unzip rabu.jar from archive

NOTE: the API integration requires curl to be in your PATH

== Using
* add releases to your pivotaltracker "done" and "backlog" to group the features
* mark features in the backlog as out of scope with a single release named "excluded"

 ruby p2r.rb your_id your_pass your_pivotal_traker_project_id > project.rabu
 java -jar rabu.jar < estimates.rabu > projection.html

== Notes
Velocity is an average of work completed for the last 3 iterations.
Not sure what rabu expects.  More realistically, it should be "completed - scoped added".

== Scope change report
Progress in pivotal can be deceiving.  It only shows work complete.   This pivotal integration helps get a handle on how much scope is added and what your true velocity is.

usage:  ruby pivotal_scope_change.rb pivotal_username password pivotal_project_number > scope_change.csv

per sprint, tallys  
 velocity: completed - added	
 remaining: all scope remaining before the release named "excluded" 
 added: stories created during sprint 	 
 completed: stories accepted during the sprint.  completed bugs/features size broken out
 stories added: list of stories added <size>:<state>:<name>

